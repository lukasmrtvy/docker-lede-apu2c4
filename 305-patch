--- a/gpio-nct5104d.c
+++ b/gpio-nct5104d.c
@@ -35,7 +35,8 @@
 #define SIO_LOCK_KEY           0xAA    /* Key to disable Super-I/O */
 
 #define SIO_NCT5104D_ID                                        0x1061  /* Chip ID */
-#define SIO_PCENGINES_APU_NCT5104D_ID  0xc452  /* Chip ID */
+#define SIO_PCENGINES_APU_NCT5104D_ID_B        0xc452  /* Chip ID */
+#define SIO_PCENGINES_APU_NCT5104D_ID_C        0xc453  /* Chip ID */
 
 enum chips { nct5104d };
 
@@ -346,7 +347,8 @@ static int __init nct5104d_find(int addr, struct nct5104d_sio *sio)
        devid = superio_inw(addr, SIO_CHIPID);
        switch (devid) {
        case SIO_NCT5104D_ID:
-       case SIO_PCENGINES_APU_NCT5104D_ID:
+        case SIO_PCENGINES_APU_NCT5104D_ID_B:
+        case SIO_PCENGINES_APU_NCT5104D_ID_C:
                sio->type = nct5104d;
                /* enable GPIO0 and GPIO1 */
                superio_select(addr, SIO_LD_GPIO);
@@ -429,7 +431,12 @@ static int __init nct5104d_gpio_init(void)
        const char *board_name = dmi_get_system_info(DMI_BOARD_NAME);
 
        /* Make sure we only run on PC Engine APU boards */
-       if (!board_name || !board_vendor || strcasecmp(board_vendor, "PC Engines") || strncasecmp(board_name, "apu", 3)) {
+        if (!board_name || !board_vendor ||
+            strcasecmp(board_vendor, "PC Engines") ||
+            (strncasecmp(board_name, "PCEngines apu", 13) &&
+             strncasecmp(board_name, "PC Engines apu", 14) &&
+             strncasecmp(board_name, "apu", 3))
+           ) {
                return -ENODEV;
        }
 
