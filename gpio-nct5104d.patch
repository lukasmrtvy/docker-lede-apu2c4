diff --git a/package/kernel/gpio-nct5104d/src/gpio-nct5104d.c b/package/kernel/gpio-nct5104d/src/gpio-nct5104d.c
index a37a1d0..3262ce9 100644
--- a/gpio-nct5104d.c.1
+++ b/gpio-nct5104d.c
@@ -15,8 +15,6 @@
 #include <linux/io.h>
 #include <linux/gpio.h>
 #include <linux/version.h>
-#include <linux/dmi.h>
-#include <linux/string.h>
 
 #define DRVNAME "gpio-nct5104d"
 
@@ -35,7 +33,8 @@
 #define SIO_LOCK_KEY		0xAA	/* Key to disable Super-I/O */
 
 #define SIO_NCT5104D_ID					0x1061	/* Chip ID */
-#define SIO_PCENGINES_APU_NCT5104D_ID	0xc452	/* Chip ID */
+#define SIO_PCENGINES_APU_NCT5104D_ID_B	0xc452	/* Chip ID */
+#define SIO_PCENGINES_APU_NCT5104D_ID_C	0xc453	/* Chip ID */
 
 enum chips { nct5104d };
 
@@ -274,8 +273,11 @@ static int nct5104d_gpio_probe(struct platform_device *pdev)
 	/* For each GPIO bank, register a GPIO chip. */
 	for (i = 0; i < data->nr_bank; i++) {
 		struct nct5104d_gpio_bank *bank = &data->bank[i];
-
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,5,0)
 		bank->chip.dev = &pdev->dev;
+#else
+		bank->chip.parent = &pdev->dev;
+#endif
 		bank->data = data;
 
 		err = gpiochip_add(&bank->chip);
@@ -346,7 +348,8 @@ static int __init nct5104d_find(int addr, struct nct5104d_sio *sio)
 	devid = superio_inw(addr, SIO_CHIPID);
 	switch (devid) {
 	case SIO_NCT5104D_ID:
-	case SIO_PCENGINES_APU_NCT5104D_ID:
+	case SIO_PCENGINES_APU_NCT5104D_ID_B:
+	case SIO_PCENGINES_APU_NCT5104D_ID_C:
 		sio->type = nct5104d;
 		/* enable GPIO0 and GPIO1 */
 		superio_select(addr, SIO_LD_GPIO);
@@ -425,13 +428,6 @@ static int __init nct5104d_gpio_init(void)
 {
 	int err;
 	struct nct5104d_sio sio;
-	const char *board_vendor = dmi_get_system_info(DMI_BOARD_VENDOR);
-	const char *board_name = dmi_get_system_info(DMI_BOARD_NAME);
-
- 	/* Make sure we only run on PC Engine APU boards */
-	if (!board_name || !board_vendor || strcasecmp(board_vendor, "PC Engines") || strncasecmp(board_name, "apu", 3)) {
-		return -ENODEV;
-	}
 
 	if (nct5104d_find(0x2e, &sio) &&
 	    nct5104d_find(0x4e, &sio))
@@ -459,3 +455,4 @@ module_exit(nct5104d_gpio_exit);
 MODULE_DESCRIPTION("GPIO driver for Super-I/O chips NCT5104D");
 MODULE_AUTHOR("Tasanakorn Phaipool <tasanakorn@gmail.com>");
 MODULE_LICENSE("GPL");
+
